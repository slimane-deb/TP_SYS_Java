import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.gantt.Task;
import org.jfree.data.gantt.TaskSeries;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.ui.Layer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Slider
 */
public class GanttView extends javax.swing.JFrame {

    /**
     * Creates new form GanttView
     */
    
    private int Texe = 0, quantum;
    Scheduler sched;
    int durationES[];
    String fileName;        
    Processus p = new Processus();
    ArrayList<Processus> LesProcess = new ArrayList<>();
    ArrayList<String> tabE_S = new ArrayList<>();
    
    public GanttView() {
        initComponents();
        this.setLocationRelativeTo(null);
                

    }
    
    public int[] getDurationES() {
        return durationES;
    }
    
    public void setDurationES(int[] durationES) {
        this.durationES = durationES;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SuivantButt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField3Qt = new javax.swing.JTextField();
        jTextField2Nperi = new javax.swing.JTextField();
        jTextField1Nproce = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jTextArea2 = new javax.swing.JTextField();
        jLabelNameP = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextArrive1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        cpuLbl = new javax.swing.JTextField();
        ajouterCPU = new javax.swing.JButton();
        jComboES = new javax.swing.JComboBox();
        ajouterES = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        compoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemOuv = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemStat = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RoundRobin Scheduling Simulator");
        setIconImage(new ImageIcon("images/clock.png").getImage());
        setResizable(false);

        SuivantButt.setText("Processus Suivant");
        SuivantButt.setEnabled(false);
        SuivantButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuivantButtActionPerformed(evt);
            }
        });

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(0, 255, 0));

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(255, 0, 0));

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(0, 0, 0));

        jTextField1.setEditable(false);
        jTextField1.setBackground(java.awt.Color.lightGray);

        jLabel4.setText("Actif");

        jLabel5.setText("en E/S");

        jLabel6.setText("attente E/S");

        jLabel8.setText("Pret / Fini");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Simuler");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Nombre de Processus");

        jLabel10.setText("Nombre de Périphériques");

        jLabel11.setText("Durée du Quatum (ms)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3Qt, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2Nperi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1Nproce, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1Nproce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2Nperi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3Qt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLayeredPane1.setEnabled(false);

        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextArea2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelNameP.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelNameP.setText("Pi");

        jLabel2.setText("Arrivee (s)");

        jTextArrive1.setText("0");

        jLabel1.setText("Processus");

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Comportement"));

        ajouterCPU.setText("Ajouter");
        ajouterCPU.setEnabled(false);
        ajouterCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterCPUActionPerformed(evt);
            }
        });

        jComboES.setEnabled(false);

        ajouterES.setText("Ajouter");
        ajouterES.setEnabled(false);
        ajouterES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterESActionPerformed(evt);
            }
        });

        jLabel7.setText("Entrée/Sortie");

        compoLabel.setText("CPU  (ms)");

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(compoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jComboES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ajouterES))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(cpuLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ajouterCPU)))
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpuLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajouterCPU)
                    .addComponent(compoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajouterES)
                    .addComponent(jLabel7)
                    .addComponent(jComboES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jLayeredPane2.setLayer(cpuLbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(ajouterCPU, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jComboES, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(ajouterES, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(compoLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextArea2)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabelNameP, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextArrive1)))
                        .addGap(50, 50, 50)
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelNameP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextArrive1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLayeredPane2))
                .addGap(18, 18, 18)
                .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );
        jLayeredPane1.setLayer(jTextArea2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabelNameP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextArrive1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Processus","Priorité", "Arrivé  (ms)", "CPU (ms)", "Comportement"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
        jScrollPane1.setViewportView(jTable1);

        jMenu1.setText("Fichier");

        jMenuItemOuv.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOuv.setText("Ouvrir...");
        jMenuItemOuv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOuvActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOuv);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Quitter");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Edition");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Annuler");
        jMenuItem3.setEnabled(false);
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Statistique");

        jMenuItemStat.setText("Afficher Stats");
        jMenuItemStat.setEnabled(false);
        jMenuItemStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemStatActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemStat);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Aide");

        jMenuItem1.setText("Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("A propos");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuivantButt, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SuivantButt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SuivantButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuivantButtActionPerformed
        // TODO add your handling code here:

        //p = new Processus(0,Integer.parseInt(this.jTextArrive1.getText()),LesProcess.size(),Texe);
        p.setId(LesProcess.size());
        p.setArriveTime(Integer.parseInt(this.jTextArrive1.getText()));
        p.setPriority(0);
        p.setTemps_execution(Texe);
        
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        model.addRow(new Object[]{"Process " + p.getId(),
            p.getArriveTime(),
            p.getTemps_execution(),
            p.getPriority(),
            this.jTextArea2.getText()});
        LesProcess.add(p);

//*************************************** fin de chargement        
        if (LesProcess.size() == Integer.parseInt(this.jTextField1Nproce.getText())) {
            
            this.LoadTerminate();
            
        } else {
            p = new Processus();
            Texe = 0;
            
            this.jTextArea2.setText("");
            this.cpuLbl.setText("");
            this.jLabelNameP.setText("P" + LesProcess.size());
            
        }
        
    }//GEN-LAST:event_SuivantButtActionPerformed
    
    public void LoadTerminate() {
        
        JOptionPane.showMessageDialog(null, "Chargement terminée", "Information", JOptionPane.INFORMATION_MESSAGE);
        
        sched = new Scheduler(LesProcess, this.quantum,
                this.durationES,
                this.durationES.length);
        sched.setE_Snames(tabE_S);
        sched.StartSched();
        
        this.jMenuItemStat.setEnabled(true);
        this.setSize(1200, 400);
        this.setMinimumSize(new Dimension(1200, 400));  
        this.setLocation(0, this.getY());
        this.jMenuItem3.setEnabled(false);
        this.jMenu1.remove(jMenuItemOuv);
     //---------------------------------------       
        
        JPanel panel = new JPanel(new FlowLayout());        
        ChartPanel chartPanel = new ChartPanel(this.createChart(this.sched.getproceList()),
                true, //propreties
                true, //save
                true, //print
                true, //zoom
                true);	//tooltips

        chartPanel.setPreferredSize(new java.awt.Dimension(1200, 300));
        
        panel.add(chartPanel);
        panel.add(this.jPanel2);
        setContentPane(panel);
    }
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    
    private void jMenuItemStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemStatActionPerformed
        // TODO add your handling code here:
        
        StatView s = new StatView(this, rootPaneCheckingEnabled);
        
        Object[][] data = new Object[sched.getproceList().size() + 1][7];        
        String title[] = {"Processus", "Arrivée", "Départ", "Résidence", "Execution", "Blockage", "E/S"};
        for (int i = 0; i < sched.getproceList().size(); i++) {

            DefaultTableModel model = (DefaultTableModel) s.jTable1.getModel();
            model.addRow(new Object[]{"Process " + i,
                sched.getproceList().get(i).getArriveTime(),
                sched.getproceList().get(i).etat_Processus2.get(sched.getproceList().get(i).etat_Processus2.size() - 1).end,
                sched.getproceList().get(i).etat_Processus2.get(sched.getproceList().get(i).etat_Processus2.size() - 1).end - sched.getproceList().get(i).getArriveTime(),
                sched.getproceList().get(i).getTemps_execution(),
                sched.getproceList().get(i).getTemp_Block(),
                sched.getproceList().get(i).getTemp_ES()        
            });
        }

        s.setVisible(rootPaneCheckingEnabled);
        
    }//GEN-LAST:event_jMenuItemStatActionPerformed
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Desktop desk = Desktop.getDesktop();
        try {
            desk.open(new File("Help.pdf"));
        } catch (IOException ex) {
            Logger.getLogger(GanttView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "TP Système d'Exploitation \n"
                + "Réalisé par : Deb Slimane & Zeghlache Sidali \n"
                + "Ecole Supérieure dInformatique (ESI) - Alger"
                + "\n © 2014", "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
        Texe = 0;
        p.etat_Processus.removeAll(p.etat_Processus);
        this.jTextArea2.setText("");
        this.jTextArea2.repaint();        
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Boolean b = false;
        try {
            
            Integer.parseInt(this.jTextField1Nproce.getText());
            Integer.parseInt(this.jTextField3Qt.getText());
            
            Integer.parseInt(this.jTextField2Nperi.getText());
            
            b = true;
            
        } catch (NumberFormatException e) {
            
            JOptionPane.showMessageDialog(null, "Paramètres Non Valides", "Erreur", JOptionPane.ERROR_MESSAGE);
        } finally {
//-------------------------------------------------------------------------             
            if (b) {
                
                NewView dialog = new NewView(new javax.swing.JFrame(), true);
                dialog.setLocationRelativeTo(null);
                
                dialog.setSize(dialog.getWidth(), 210);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                
                dialog.jLabelES.setEnabled(true);
                
                String mask = "";                

                for (int i = 0; i < Integer.parseInt(this.jTextField2Nperi.getText()) - 1; i++) {
                    mask += "##  -"; // ajout des tirets
                    dialog.jLabelES.setText(dialog.jLabelES.getText() + "F " + i + "-");
                }
                mask += "##";
                dialog.jLabelES.setText(dialog.jLabelES.getText() + "F "
                        + (Integer.parseInt(this.jTextField2Nperi.getText()) - 1));
                
                try {
                    dialog.jFormattedTextField1.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter(mask)));
                } catch (ParseException ex) {
                    Logger.getLogger(NewView.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                dialog.setVisible(true);
                
                this.durationES = new int[Integer.parseInt(this.jTextField2Nperi.getText())];
                this.quantum = Integer.parseInt(this.jTextField3Qt.getText());
                
                String word[] = dialog.jFormattedTextField1.getText().split("  -"); // correction du mot
                tabE_S.removeAll(tabE_S);
                for (int j = 0; j < Integer.parseInt(this.jTextField2Nperi.getText()); j++) {
                    
                    this.durationES[j] = Integer.parseInt(word[j]);
                    tabE_S.add(new String("F" + j));                    
                }
                
                this.jButton1.setEnabled(false);
                jTextField3Qt.setEnabled(false);
                jTextField2Nperi.setEnabled(false);
                jTextField1Nproce.setEnabled(false);
                //------------------------------------------------            
                this.jMenuItem3.setEnabled(true);
                this.ajouterCPU.setEnabled(true);
                this.ajouterES.setEnabled(true);
                this.SuivantButt.setEnabled(true);
                this.jComboES.setEnabled(true);
                
                for (int i = 0; i < Integer.parseInt(this.jTextField2Nperi.getText()); i++) {
                    this.jComboES.addItem(new String("F" + i));
                }
                this.jLabelNameP.setText("P0");
                
            }
        }

//----------------------------------------------------------------------------------------        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void ajouterESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterESActionPerformed
        // TODO add your handling code here:

        this.jTextArea2.setText(this.jTextArea2.getText() + this.jComboES.getSelectedItem().toString() + "-");
        this.jTextArea2.repaint();        
        p.etat_Processus.add(new String(this.jComboES.getSelectedItem().toString()));
    }//GEN-LAST:event_ajouterESActionPerformed
    
    private void ajouterCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterCPUActionPerformed
        // TODO add your handling code here:
        
        Texe += Integer.parseInt(this.cpuLbl.getText());
        p.etat_Processus.add(new Integer(Integer.parseInt(this.cpuLbl.getText())));
        this.jTextArea2.setText(this.jTextArea2.getText() + this.cpuLbl.getText() + "-");
        this.jTextArea2.repaint();
        
    }//GEN-LAST:event_ajouterCPUActionPerformed
    
    private void jMenuItemOuvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOuvActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();//création dun nouveau filechosser
        chooser.setApproveButtonText("choisir"); //intitulé du bouton
        chooser.setDialogTitle("Sélectionner le fichier de configuration ");
        FileNameExtensionFilter imagesFilter = new FileNameExtensionFilter("Fichier txt", "txt");
        chooser.addChoosableFileFilter(imagesFilter);
        chooser.setFileFilter(imagesFilter);
        
        chooser.setCurrentDirectory(new File(new File("").getAbsolutePath()));
        String Nfich = null, filenamecopy = null;
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            Nfich = chooser.getSelectedFile().getPath(); //si un fichier est selectionné, récupérer le fichier puis son path et l'afficher dans le champs de texte
            filenamecopy = chooser.getSelectedFile().getName();
            
        }
        this.fileName = Nfich;
        try {
            this.getinfofromfile(this.fileName);
        } catch (IOException e1) {
            
        }
        for (int l = 0; l < 1; l++) {
            JOptionPane jop = new JOptionPane();
            String str = JOptionPane.showInputDialog(null,
                    "Veuillez Entrer la durée du quantum ", "Quantum",
                    JOptionPane.QUESTION_MESSAGE);
            try {
                this.quantum = Integer.parseInt(str);
            } catch (NumberFormatException e1) {
                JOptionPane.showMessageDialog(null, "Valeur Non Numérique",
                        "Erreur", JOptionPane.ERROR_MESSAGE);
                l--;
            }
        }
        
        for (int l = 0; l < tabE_S.size(); l++) {
            JOptionPane jop = new JOptionPane();
            String nomSaisie = JOptionPane.showInputDialog(null,
                    "durée de périphérique : " + tabE_S.get(l), "Temps D'Entrée Sortie",
                    JOptionPane.QUESTION_MESSAGE);
            try {
                this.durationES[l] = Integer.parseInt(nomSaisie);
            } catch (NumberFormatException e1) {
                JOptionPane.showMessageDialog(null, "Valeur Non Numérique", "Erreur", JOptionPane.ERROR_MESSAGE);
                l--;
            }
        }        
        this.LoadTerminate();
        
    }//GEN-LAST:event_jMenuItemOuvActionPerformed
    
    public void getinfofromfile(String filename) throws IOException {
        
        BufferedReader FichierProc = null;
        
        FichierProc = new BufferedReader(new FileReader(filename));
        
        String line = new String();        
        int i = 0, j = 0;
        Object[][] data = null;
        data = new String[this.countLines(filename)][5];// / pour les 5 colonnes ? de lignes(process
 

        tabE_S.removeAll(tabE_S);
        this.LesProcess.removeAll(LesProcess);
        
        while (((line = FichierProc.readLine()) != null)) {
            
            String[] tab = null;// /contenir ligne sans :
            String[] tab2 = null;// /contenir Comportement sans ;
            String[] tab3 = null;// / contenir comportement sans -

            tab = line.split(":");
            for (j = 0; j < data[i].length; j++) {
                if (j == 4) {
                    tab2 = tab[tab.length - 1].split(";");
                    data[i][j] = tab2[0];
                } else {
                    data[i][j] = tab[j];
                }
            }
            tab3 = tab2[0].split("-");
            String str = "";
            for (int k = 0; k < tab3.length; k++) {
                for (int l = 0; l < tabE_S.size(); l++) {
                    str += tabE_S.get(l);// /pour construire une chaine des perph existant dans tabE_S
                }
                if (!(this.isInt(tab3[k]) || str.contains(tab3[k]))) {
                    tabE_S.add(new String(tab3[k]));
                }
            }
            p = new Processus(Integer.parseInt(tab[1]),
                    Integer.parseInt(tab[2]), i, Integer.parseInt(tab[3]));
            for (int m = 0; m < tab3.length; m++) {
                
                try {
                    p.etat_Processus.add(new Integer(Integer.parseInt(tab3[m])));                    
                } catch (NumberFormatException numberFormatException) {
                    p.etat_Processus.add(new String(tab3[m]));                    
                }
                
            }
            
            this.LesProcess.add(p);
            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
            model.addRow(data[i]);
            i++;
        }

        Collections.sort(tabE_S, new Comparator<String>() ///Ordonner les processus selon leurs Noms
        {
            public int compare(String o1, String o2) {
                return o1.compareTo(o2);
            }
        });
        this.durationES = new int[tabE_S.size()];
        
        FichierProc.close();
        
    }
    
    public boolean isInt(String s) // assuming integer is in decimal number system
    {
        for (int a = 0; a < s.length(); a++) {
            if (a == 0 && s.charAt(a) == '-') {
                continue;
            }
            if (!Character.isDigit(s.charAt(a))) {
                return false;
            }
        }
        return true;
    }

    public int countLines(String filename) throws IOException {
        LineNumberReader reader = new LineNumberReader(new FileReader(filename));
        int cnt = 0;
        String lineRead = "";
        while ((lineRead = reader.readLine()) != null) {
        }
        
        cnt = reader.getLineNumber();        
        reader.close();
        return cnt;
    }

//******************************************************************************    
    public IntervalCategoryDataset createDataset(ArrayList<Processus> ll) {
        
        TaskSeries s1 = new TaskSeries("");
        
        for (int i = ll.size() - 1; i >= 0; i--) {
            
            Task M1 = new Task("Process " + i,
                    date(ll.get(i).getArriveTime()),
                    date(ll.get(i).etat_Processus2.get(ll.get(i).etat_Processus2.size() - 1).end));
            
            for (int j = 0; j < ll.get(i).etat_Processus2.size(); j++) {
                if (ll.get(i).etat_Processus2.get(j).Statut_Processus != EtatProcess.Blocked
                        && ll.get(i).etat_Processus2.get(j).Statut_Processus != EtatProcess.NonExist) {
                    
                    Task O1 = new Task(ll.get(i).etat_Processus2.get(j).Statut_Processus.toString(),
                            date(ll.get(i).etat_Processus2.get(j).start),
                            date(ll.get(i).etat_Processus2.get(j).end));
                    // remplir tempsES
                    if (ll.get(i).etat_Processus2.get(j).Statut_Processus == EtatProcess.wait_es)
                        ll.get(i).setTemp_ES(ll.get(i).getTemp_ES()+(ll.get(i).etat_Processus2.get(j).end)-(ll.get(i).etat_Processus2.get(j).start));
                   
                    if (ll.get(i).etat_Processus2.get(j).Statut_Processus == EtatProcess.E_S) {
                        O1.setPercentComplete(0.0);
                        ll.get(i).setTemp_ES(ll.get(i).getTemp_ES()+(ll.get(i).etat_Processus2.get(j).end)-(ll.get(i).etat_Processus2.get(j).start));
                   
                    } else if (ll.get(i).etat_Processus2.get(j).Statut_Processus == EtatProcess.Actif) {
                        O1.setPercentComplete(1.0);
                        
                    }
                    
                    M1.addSubtask(O1);
                }
            }
            
            s1.add(M1);
        }
 

        //ajout des sous taches		
        TaskSeriesCollection collection = new TaskSeriesCollection();
        collection.add(s1);
        
        return collection;
    }

    /**
     * Utility method for creating <code>Date</code> objects.
     *
     * @param day the date.
     * @param month the month.
     * @param year the year.
     *
     * @return a date.
     */
    private Date date(int year) {
        final Calendar calendar = Calendar.getInstance();
        //calendar.set(year, Calendar.ALL_STYLES, 10, 10, 10, 10);
        //calendar.set(year, 0, 0);
        calendar.setTimeInMillis(year);
        return calendar.getTime();
    }

    /**
     * Creates a chart.
     *
     * @param dataset the dataset.
     *
     * @return The chart.
     */
    private JFreeChart createChart(ArrayList<Processus> ll) {
        
        IntervalCategoryDataset dataset = createDataset(ll);
        
        JFreeChart chart = ChartFactory.createGanttChart(
                "Diagramme de Gantt", // chart title
                "Processus", // domain axis label
                "Durée", // range axis label
                dataset, // data
                true, // include legend
                true, // tooltips
                false // urls
        );
        
        CategoryPlot plot = (CategoryPlot) chart.getPlot();
        GanttRenderer renderer = (GanttRenderer) plot.getRenderer();
        
        renderer.setSeriesPaint(0, Color.black);
        renderer.setStartPercent(0.0);
        renderer.setEndPercent(1);
        plot.setRangeAxis(new NumberAxis("Temps"));
        
        NumberAxis axis = (NumberAxis) plot.getRangeAxis();
        axis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());        
        plot.setRangeAxisLocation(AxisLocation.getOpposite(AxisLocation.TOP_OR_LEFT));
                        
        
        plot.getRenderer().setBaseToolTipGenerator(
                new GanttView.MyToolTipGenerator("{0}, {1}: ", NumberFormat.getInstance()));
        
        return chart;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        GanttView g = new GanttView();
        g.setVisible(true);
        g.setSize(new Dimension(770, 410));
       //g.setLocation(g.getX()+99, g.getY()+20);
        
    }
    
    class MyToolTipGenerator extends IntervalCategoryToolTipGenerator {
        
        NumberFormat format;
        
        private MyToolTipGenerator(String value, NumberFormat format) {
            super(value, format);
            this.format = format;            
        }
        
        @Override
        public String generateToolTip(CategoryDataset cds, int row, int col) {
            final String s = super.generateToolTip(cds, row, col);
            TaskSeriesCollection tsc = (TaskSeriesCollection) cds;
            StringBuilder sb = new StringBuilder(s);
            
            sb.append(" Debut : ");
            for (int i = 0; i < tsc.getSubIntervalCount(row, col); i++) {
                sb.append(format.format(tsc.getStartValue(row, col, i)));
                sb.append("-");
                sb.append(format.format(tsc.getEndValue(row, col, i)));
                sb.append(",");
            }
            sb.deleteCharAt(sb.length() - 1);
            sb.append(" Fin.");
            return sb.toString();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SuivantButt;
    private javax.swing.JButton ajouterCPU;
    private javax.swing.JButton ajouterES;
    private javax.swing.JLabel compoLabel;
    private javax.swing.JTextField cpuLbl;
    private javax.swing.JButton jButton1;
    javax.swing.JComboBox jComboES;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    javax.swing.JLabel jLabelNameP;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItemOuv;
    private javax.swing.JMenuItem jMenuItemStat;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextArea2;
    private javax.swing.JTextField jTextArrive1;
    private javax.swing.JTextField jTextField1;
    javax.swing.JTextField jTextField1Nproce;
    javax.swing.JTextField jTextField2Nperi;
    javax.swing.JTextField jTextField3Qt;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

}
